{"version":3,"sources":["components/common/leftDrawer.jsx","components/common/topMenu.jsx","components/home/featureBubble.jsx","components/home/featuresMenu.jsx","components/home/home.jsx","components/tagEditor/leftDrawer.jsx","components/tagEditor/topMenu.jsx","components/tagEditor/textEditor/autoPopulateSelect.jsx","components/tagEditor/textEditor/enclosingTagSelect.jsx","components/tagEditor/textEditor/textContentInput.jsx","components/tagEditor/textEditor/editableCheckbox.jsx","components/tagEditor/textEditor/maxLengthInput.jsx","components/tagEditor/textEditor/lengthDefaultInput.jsx","components/tagEditor/textEditor/pmTextInput.jsx","components/tagEditor/textEditor/preferMaxLengthCheckbox.jsx","components/tagEditor/textEditor/optionalCheckbox.jsx","components/tagEditor/textEditor/richTextCheckbox.jsx","components/tagEditor/textEditor/submitButton.jsx","components/tagEditor/textEditor/textEditor.jsx","components/tagEditor/linkEditor/linkEditor.jsx","components/tagEditor/imageEditor/imageEditor.jsx","components/tagEditor/tagDisplay.jsx","components/tagEditor/tagEditor.jsx","App.jsx","index.js"],"names":["LeftDrawer","className","role","onClick","this","props","toggleDrawer","List","to","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","secondary","Component","TopMenu","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","type","variant","style","flex","textAlign","SwipeableDrawer","open","mainState","isDrawerOpen","onClose","onOpen","updateDropdownSelection","topMenuState","state","FeatureBubble","Card","CardContent","gutterBottom","component","title","desc","CardActions","linkPath","Button","size","FeaturesMenu","id","Home","event","setState","AutoPopulateSelect","Form","Group","controlId","Label","Control","onChange","e","setAutoPopulateText","target","value","as","EnclosingTagSelect","setEnclosingTag","TextContentInput","setCustomText","placeholder","EditableCheckbox","Check","label","toggleEditable","MaxLengthInput","setMaxLengthValue","LengthDefaultInput","setLengthDefaultValue","PmTextInput","setPmText","PreferMaxLengthCheckbox","toggleMaxLength","OptionalCheckbox","toggleOptional","RichTextCheckbox","toggleRichText","SubmitButton","buildAutoPopulatedPmText","snippet","tagContent","autoPopulateText","buildManualPmText","pmText","buildLengthAttribute","preferMaxLengthOverDefault","maxLength","lengthDefault","buildOpeningTag","enclosingTag","isEditable","hasRichText","isOptional","buildFinalTag","tag","customText","updateFinalTag","preventDefault","TextEditor","newTag","newText","newValue","console","log","renderTextLengthFields","renderEditableFields","LinkEditor","ImageEditor","TagDisplay","finalTag","dropdownSelection","newSelection","renderEditor","App","exact","path","TagEditor","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d80a02af.chunk.js","sourcesContent":["import '../../css/tagEditor/leftDrawer.css'\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport TextFields from '@material-ui/icons/TextFields'\nimport LinkIcon from '@material-ui/icons/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { List, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\n\n\nexport default class LeftDrawer extends Component {\n    render() {\n        return (\n            <div\n                className=\"leftDrawer-div\"\n                role=\"presentation\"\n                onClick={this.props.toggleDrawer(false)}\n            >\n                <List>\n                    <Link to='/'>\n                        <ListItem button key=\"Reserved for later\">\n                            <ListItemIcon>\n                                <HomeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Home\" />\n                        </ListItem>\n                    </Link>\n                </List>\n                <Divider />\n                <List>\n                    <Link to='/editor'>\n                        <ListItem button key=\"PM-Text\">\n                            <ListItemIcon>\n                                <TextFields />\n                            </ListItemIcon>\n                            <ListItemText secondary=\"Editor\" />\n                        </ListItem>\n                    </Link>\n                </List>\n\n            </div>\n        )\n    }\n}","// Imports\nimport React, { Component } from 'react';\nimport LeftDrawer from './leftDrawer'\nimport { AppBar, Toolbar, IconButton, Typography, SwipeableDrawer } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nexport default class TopMenu extends Component {\n\n    render() {\n        return (\n            <div className=\"dropdown\" >\n                <AppBar position=\"static\">\n                    <Toolbar >\n                        <IconButton onClick={this.props.toggleDrawer(true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography type=\"title\" variant=\"h6\" style={{ flex: 1, textAlign: \"left\" }} >\n                            PMK 0.1\n                        </Typography>\n                        <SwipeableDrawer\n                            open={this.props.mainState.isDrawerOpen}\n                            onClose={this.props.toggleDrawer(false)}\n                            onOpen={this.props.toggleDrawer(true)}\n                        >\n                            <LeftDrawer\n                                updateDropdownSelection={this.props.updateDropdownSelection}\n                                toggleDrawer={this.props.toggleDrawer}\n                                topMenuState={this.state} />\n                        </SwipeableDrawer>\n                    </Toolbar>\n\n                </AppBar>\n            </div>\n        );\n    }\n}","import '../../css/home/featureBubble.css'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport React, { Component } from 'react';\n\nexport default class FeatureBubble extends Component {\n    render() {\n        return (\n            <Card className=\"featureBubble-card\">\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {this.props.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {this.props.desc}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Link to={this.props.linkPath}>\n                        <Button size=\"small\" color=\"primary\">\n                            Open\n                    </Button>\n                    </Link>\n                </CardActions>\n            </Card>\n        );\n    }\n}","import '../../css/home/featuresMenu.css'\nimport FeatureBubble from './featureBubble'\nimport React, { Component } from 'react';\n\nexport default class FeaturesMenu extends Component {\n    render() {\n        return (\n            <div id=\"featuresMenu-div\">\n                <FeatureBubble title=\"PM Tag Editor\" desc=\"Dynamically generate pm-ready tags for use in any project. Available for text, images and links.\" linkPath=\"/editor\" />\n            </div>\n        )\n    }\n}","import '../../css/home/home.css'\nimport TopMenu from '../common/topMenu'\nimport FeaturesMenu from './featuresMenu'\nimport React, { Component } from 'react';\n\nexport default class Home extends Component {\n\n    state = {\n        isDrawerOpen: false\n    }\n\n    // Open or close the drawer\n    toggleDrawer = (open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        this.setState({ isDrawerOpen: open })\n    }\n\n    render() {\n        return (\n            <div id=\"home-div\">\n                <TopMenu mainState={this.state} toggleDrawer={this.toggleDrawer} />\n                <FeaturesMenu />\n            </div>\n        )\n    }\n}","import '../../css/tagEditor/leftDrawer.css'\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport TextFields from '@material-ui/icons/TextFields'\nimport LinkIcon from '@material-ui/icons/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { List, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\n\n\nexport default class LeftDrawer extends Component {\n    render() {\n        return (\n            <div\n                className=\"leftDrawer-div\"\n                role=\"presentation\"\n                onClick={this.props.toggleDrawer(false)}\n            >\n                <List>\n                    <Link to='/'>\n                        <ListItem button key=\"Reserved for later\">\n                            <ListItemIcon>\n                                <HomeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Home\" />\n                        </ListItem>\n                    </Link>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem onClick={() => this.props.updateDropdownSelection(\"text\")} button key=\"PM-Text\">\n                        <ListItemIcon>\n                            <TextFields />\n                        </ListItemIcon>\n                        <ListItemText secondary=\"PM-Text\" />\n                    </ListItem>\n                    <ListItem onClick={() => this.props.updateDropdownSelection(\"link\")} button key=\"PM-Link\">\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText secondary=\"PM-Link\" />\n                    </ListItem>\n                    <ListItem onClick={() => this.props.updateDropdownSelection(\"image\")} button key=\"Image editor\">\n                        <ListItemIcon>\n                            <ImageIcon />\n                        </ListItemIcon>\n                        <ListItemText secondary=\"Image editor\" />\n                    </ListItem>\n                </List>\n\n            </div>\n        )\n    }\n}","// Imports\nimport React, { Component } from 'react';\nimport LeftDrawer from './leftDrawer'\nimport { AppBar, Toolbar, IconButton, Typography, SwipeableDrawer } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nexport default class TopMenu extends Component {\n\n    render() {\n        return (\n            <div className=\"dropdown\" >\n                <AppBar position=\"static\">\n                    <Toolbar >\n                        <IconButton onClick={this.props.toggleDrawer(true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography type=\"title\" variant=\"h6\" style={{ flex: 1, textAlign: \"left\" }} >\n                            PMK 0.1\n                        </Typography>\n                        <SwipeableDrawer\n                            open={this.props.mainState.isDrawerOpen}\n                            onClose={this.props.toggleDrawer(false)}\n                            onOpen={this.props.toggleDrawer(true)}\n                        >\n                            <LeftDrawer\n                                updateDropdownSelection={this.props.updateDropdownSelection}\n                                toggleDrawer={this.props.toggleDrawer}\n                                topMenuState={this.state} />\n                        </SwipeableDrawer>\n                    </Toolbar>\n\n                </AppBar>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass AutoPopulateSelect extends Component {\n    render() {\n        return (\n            <Form.Group controlId=\"exampleForm.ControlSelect1\" className=\"editor-input-medium\">\n                <Form.Label>Auto-populate</Form.Label>\n                <Form.Control onChange={(e) => this.props.setAutoPopulateText(e.target.value)} as=\"select\" >\n                    <option>None</option>\n                    <option>Company Name</option>\n                    <option>Company Website</option>\n                    <option>Company Email</option>\n                    <option>Company Phone</option>\n                    <option>Company Address</option>\n                    <option>Value Proposition</option>\n                    <option>Link to LP</option>\n                </Form.Control>\n            </Form.Group>\n        )\n    }\n}\nexport default AutoPopulateSelect;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\n\nclass EnclosingTagSelect extends Component {\n    render() {\n        return (\n            <Form.Group onChange={(event) => { this.props.setEnclosingTag(event.target.value) }} controlId=\"exampleForm.ControlSelect2\" className=\"editor-input-small\">\n                <Form.Label>Enclosing tag</Form.Label>\n                <Form.Control as=\"select\">\n                    <option>div</option>\n                    <option>p</option>\n                    <option>span</option>\n                </Form.Control>\n            </Form.Group>\n        )\n    }\n}\n\nexport default EnclosingTagSelect;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass TextContentInput extends Component {\n    render() {\n        return (\n            <Form.Group controlId=\"textContent\" className=\"editor-input-wide\">\n                <Form.Label>Text content</Form.Label>\n                <Form.Control onChange={(event) => { this.props.setCustomText(event.target.value) }} type=\"text\" placeholder=\"Enter the text which should be within the tag\" />\n            </Form.Group>\n        )\n    }\n}\n\nexport default TextContentInput;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass EditableCheckbox extends Component {\n    render() {\n        return (\n            <Form.Group controlId=\"editableCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Editable\" onChange={() => {\n                    this.props.toggleEditable();\n                }} />\n            </Form.Group>\n        )\n    }\n}\n\nexport default EditableCheckbox;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass MaxLengthInput extends Component {\n    render() {\n        return (\n            <Form.Group onChange={(e) => { this.props.setMaxLengthValue(e.target.value) }} controlId=\"maxLength\" className=\"editor-input-small\">\n                <Form.Label>Max length</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter\" />\n            </Form.Group>\n        )\n    }\n}\n\nexport default MaxLengthInput;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass LengthDefaultInput extends Component {\n    render() {\n        return (\n            <Form.Group onChange={(e) => { this.props.setLengthDefaultValue(e.target.value) }} controlId=\"lengthDefault\" className=\"editor-input-small\">\n                <Form.Label>Length default</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter\" />\n            </Form.Group>\n        )\n    }\n}\n\nexport default LengthDefaultInput;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass PmTextInput extends Component {\n    render() {\n        return (\n            <Form.Group onChange={(event) => { this.props.setPmText(event.target.value) }} controlId=\"pmText\" className=\"editor-input-medium\">\n                <Form.Label>PM-Text</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter the unique pm-text attribute\" />\n            </Form.Group>\n        )\n    }\n}\nexport default PmTextInput;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass PreferMaxLengthCheckbox extends Component {\n    render() {\n        return (\n            <Form.Group controlId=\"maxLengthCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Use max-length\" onChange={() => {\n                    this.props.toggleMaxLength()\n                }} />\n            </Form.Group>\n        )\n    }\n}\nexport default PreferMaxLengthCheckbox;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass OptionalCheckbox extends Component {\n    render() {\n        return (\n            <Form.Group controlId=\"optionalCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Optional\" onChange={() => {\n                    this.props.toggleOptional();\n                }} />\n            </Form.Group>\n        )\n    }\n}\n\nexport default OptionalCheckbox;","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass RichTextCheckbox extends Component {\n    render() {\n        return (\n            <Form.Group controlId=\"richTextCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Rich Text\" onChange={() => {\n                    this.props.toggleRichText();\n                }} />\n            </Form.Group>\n        )\n    }\n}\n\nexport default RichTextCheckbox;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass SubmitButton extends Component {\n\n    // Return a pm-text=\"\" tag with the relevant attribute value\n    buildAutoPopulatedPmText = () => {\n        let snippet = \" pm-text=\\\"\";\n        if (this.props.mainState.tagContent.autoPopulateText === \"Company Name\") {\n            snippet += \"companyname\"\n        }\n        if (this.props.mainState.tagContent.autoPopulateText === \"Company Website\") {\n            snippet += \"companyurl\"\n        }\n        if (this.props.mainState.tagContent.autoPopulateText === \"Company Email\") {\n            snippet += \"companyemail\"\n        }\n        if (this.props.mainState.tagContent.autoPopulateText === \"Company Phone\") {\n            snippet += \"companyphone\"\n        }\n        if (this.props.mainState.tagContent.autoPopulateText === \"Company Address\") {\n            snippet += \"companyaddress\"\n        }\n        if (this.props.mainState.tagContent.autoPopulateText === \"Value Proposition\") {\n            snippet += \"valueproposition\"\n        }\n        if (this.props.mainState.tagContent.autoPopulateText === \"Link to LP\") {\n            snippet += \"landingpage\"\n        }\n        snippet += \"\\\"\"\n        return snippet;\n    }\n\n    // Return a pm-text=\"\" with the user-added attribute\n    buildManualPmText = () => {\n        let snippet = \" pm-text=\\\"\";\n        snippet += this.props.mainState.tagContent.pmText;\n        snippet += \"\\\"\"\n        return snippet;\n    }\n\n    buildLengthAttribute = () => {\n        if (this.props.mainState.preferMaxLengthOverDefault) {\n            return (\n                \" max-length=\\\"\" +\n                this.props.mainState.tagContent.maxLength +\n                \"\\\"\"\n            )\n        }\n        return (\n            \" length-default=\\\"+\" +\n            this.props.mainState.tagContent.lengthDefault +\n            \"\\\"\"\n        )\n    }\n\n    // Build the opening tag and its relevant attributes\n    buildOpeningTag = () => {\n        let snippet = \"<\";\n        snippet += this.props.mainState.tagContent.enclosingTag;\n        // If the pm-text is set to Auto Populate\n        if (this.props.mainState.tagContent.autoPopulateText) {\n            snippet += this.buildAutoPopulatedPmText();\n        }\n        // If the pm-text is NOT set to Auto Populate\n        if (!this.props.mainState.tagContent.autoPopulateText && this.props.mainState.tagContent.pmText) {\n            snippet += this.buildManualPmText();\n        }\n        // Add the editable attribute (if applicable)\n        if (this.props.mainState.isEditable) {\n            snippet += \" editable=\\\"true\\\"\";\n            // Add the rich text attribute (if applicable)\n            if (this.props.mainState.hasRichText) {\n                snippet += \" rich-text=\\\"true\\\"\";\n            }\n            snippet += this.buildLengthAttribute();\n        }\n        // Add the optional attribute (if applicable)\n        if (this.props.mainState.isOptional) {\n            snippet += \" optional=\\\"true\\\"\";\n        }\n        snippet += \">\"\n        return snippet;\n    }\n\n    // Build the final tag\n    buildFinalTag = () => {\n        let tag = this.buildOpeningTag();\n\n        // Text content\n        if (this.props.mainState.tagContent.customText !== null) {\n            tag += this.props.mainState.tagContent.customText;\n        }\n        // Closing tag\n        tag += \"</\" + this.props.mainState.tagContent.enclosingTag + \">\";\n        this.props.updateFinalTag(tag);\n    }\n\n    render() {\n        return (\n            <Button onClick={(e) => {\n                e.preventDefault();\n                this.buildFinalTag();\n            }} variant=\"contained\" color=\"primary\" type=\"submit\">\n                Generate\n            </Button>\n        )\n    }\n}\n\nexport default SubmitButton;","// Imports\nimport '../../../css/tagEditor/textEditor.css'\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport AutoPopulateSelect from './autoPopulateSelect';\nimport EnclosingTagSelect from './enclosingTagSelect';\nimport TextContentInput from './textContentInput';\nimport EditableCheckbox from './editableCheckbox';\nimport MaxLengthInput from './maxLengthInput';\nimport LengthDefaultInput from './lengthDefaultInput';\nimport PmTextInput from './pmTextInput';\nimport PreferMaxLengthCheckbox from './preferMaxLengthCheckbox';\nimport OptionalCheckbox from './optionalCheckbox';\nimport RichTextCheckbox from './richTextCheckbox';\nimport SubmitButton from './submitButton';\n\nclass TextEditor extends Component {\n    state = {\n        isEditable: false,\n        isOptional: false,\n        hasRichText: false,\n        preferMaxLengthOverDefault: false,\n        tagContent: {\n            enclosingTag: \"div\",\n            autoPopulateText: null,\n            pmText: null,\n            customText: null,\n            maxLength: 0,\n            lengthDefault: 0,\n        },\n    }\n\n    // Toggle whether the user can insert 'max-length' or 'length-default'\n    toggleMaxLength = () => {\n        this.setState({ preferMaxLengthOverDefault: !this.state.preferMaxLengthOverDefault })\n    }\n\n    // Toggle whether the pm-tag is editable\n    toggleEditable = () => {\n        this.setState({ isEditable: !this.state.isEditable })\n    }\n\n    // Toggle whether the pm-tag is optional\n    toggleOptional = () => {\n        this.setState({ isOptional: !this.state.isOptional })\n    }\n\n    // Toggle whether the pm-tag has rich text\n    toggleRichText = () => {\n        this.setState({ hasRichText: !this.state.hasRichText })\n    }\n\n    // Change the element which encloses the text [p/div/span]\n    setEnclosingTag = (newTag) => {\n        let tagContent = { ...this.state.tagContent };\n        tagContent.enclosingTag = newTag;\n        this.setState({ tagContent });\n    }\n\n    // Manually change the pm-text from the text input\n    setPmText = (newText) => {\n        let tagContent = { ...this.state.tagContent };\n        tagContent.pmText = newText;\n        this.setState({ tagContent });\n    }\n\n    // Change the auto populated pm-text to the selection of the user\n    setAutoPopulateText = (newText) => {\n        let tagContent = { ...this.state.tagContent };\n        tagContent.autoPopulateText = newText === \"None\" ? null : newText;\n        this.setState({ tagContent });\n    }\n\n    // Set the text content of the tag to the user input\n    setCustomText = (newText) => {\n        let tagContent = { ...this.state.tagContent };\n        tagContent.customText = newText;\n        this.setState({ tagContent });\n    }\n\n    // Set the value of the attribute max-length\n    setMaxLengthValue = (newValue) => {\n        let tagContent = { ...this.state.tagContent };\n        tagContent.maxLength = newValue;\n        this.setState({ tagContent });\n        console.log(newValue)\n    }\n\n    // Set the value of the attribute length-default\n    setLengthDefaultValue = (newValue) => {\n        let tagContent = { ...this.state.tagContent };\n        tagContent.lengthDefault = newValue;\n        this.setState({ tagContent });\n        console.log(newValue)\n    }\n\n    // Render the max-length or the length-default based on the boolean preferMaxLengthOverDefault\n    renderTextLengthFields = () => {\n        if (this.state.preferMaxLengthOverDefault) {\n            return <MaxLengthInput setMaxLengthValue={this.setMaxLengthValue} />\n        }\n        else {\n            return <LengthDefaultInput setLengthDefaultValue={this.setLengthDefaultValue} />\n        }\n    }\n\n    // Render the editable properties of the PM tags based on the boolean isEditable\n    renderEditableFields = () => {\n        if (this.state.isEditable) {\n            return (\n                <span>\n                    <PmTextInput setPmText={this.setPmText} />\n                    <PreferMaxLengthCheckbox toggleMaxLength={this.toggleMaxLength} />\n                    {this.renderTextLengthFields()}\n                    <OptionalCheckbox toggleOptional={this.toggleOptional} />\n                    <RichTextCheckbox toggleRichText={this.toggleRichText} />\n                </span>\n            )\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div id=\"div-textEditor\" >\n                <p className=\"editor-h1\">\n                    Text editor\n                </p>\n                <Form>\n                    <AutoPopulateSelect setAutoPopulateText={this.setAutoPopulateText} />\n                    <EnclosingTagSelect setEnclosingTag={this.setEnclosingTag} />\n                    <TextContentInput setCustomText={this.setCustomText} />\n                    <EditableCheckbox toggleEditable={this.toggleEditable} />\n                    {this.renderEditableFields()}\n                    <SubmitButton mainState={this.state} updateFinalTag={this.props.updateFinalTag} />\n                </Form>\n            </div>\n        )\n    }\n}\nexport default TextEditor;","// Imports\nimport React, { Component } from 'react';\nimport '../../../css/tagEditor/linkEditor.css'\n\n\nclass LinkEditor extends Component {\n    render() {\n        return (\n            <div id=\"div-linkEditor\">\n                <p className=\"editor-h1\">\n                    Link editor\n                </p>\n                <p>Coming soon</p>\n            </div>\n        )\n    }\n}\nexport default LinkEditor;","// Imports\nimport React, { Component } from 'react';\nimport '../../../css/tagEditor/imageEditor.css'\n\nclass ImageEditor extends Component {\n    render() {\n        return (\n            <div id=\"div-imageEditor\">\n                <p className=\"editor-h1\">\n                    Image editor\n                </p>\n                <p>Coming soon</p>\n            </div>\n        )\n    }\n}\nexport default ImageEditor;","// Imports\nimport React, { Component } from 'react';\nimport '../../css/tagEditor/tagDisplay.css'\n\nclass TagDisplay extends Component {\n\n    render() {\n        return (\n            <div id=\"div-tagDisplay\">\n                <p className=\"tagDisplay-h1\">\n                    Result\n                </p>\n                <p className=\"tagDisplay-result\">\n                    {this.props.mainState.finalTag}\n                </p>\n            </div>\n        )\n    }\n}\nexport default TagDisplay;","// Imports\nimport React, { Component } from 'react';\nimport TopMenu from './topMenu';\nimport TextEditor from './textEditor/textEditor';\nimport LinkEditor from './linkEditor/linkEditor';\nimport ImageEditor from './imageEditor/imageEditor';\nimport TagDisplay from './tagDisplay';\nimport '../../css/tagEditor/tagEditor.css'\n\nclass Home extends Component {\n    state = {\n        isDrawerOpen: false,\n        dropdownSelection: \"text\",\n        finalTag: \"...\"\n    }\n\n    // Open or close the drawer\n    toggleDrawer = (open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        this.setState({ isDrawerOpen: open })\n    }\n\n    // Switch the currently open editor [Image/Text/Link]\n    updateDropdownSelection = (newSelection) => {\n        this.setState({\n            dropdownSelection: newSelection\n        })\n    }\n\n    // Update the final tag\n    updateFinalTag = (newTag) => {\n        this.setState({\n            finalTag: newTag\n        })\n    }\n\n    // Render the relevant editor based on the value of the dropdown menu at the top\n    renderEditor = () => {\n        if (this.state.dropdownSelection === \"text\") {\n            return <TextEditor updateFinalTag={this.updateFinalTag} />\n        }\n        if (this.state.dropdownSelection === \"link\") {\n            return <LinkEditor />\n        }\n        if (this.state.dropdownSelection === \"image\") {\n            return <ImageEditor />\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"div-tagEditor\">\n                <TopMenu updateDropdownSelection={this.updateDropdownSelection} mainState={this.state} toggleDrawer={this.toggleDrawer}></TopMenu>\n                {this.renderEditor()}\n                <TagDisplay mainState={this.state} />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport Home from './components/home/home'\nimport TagEditor from './components/tagEditor/tagEditor'\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/editor' component={TagEditor} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {\n    BrowserRouter,\n} from 'react-router-dom';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL} >\n    <App />\n</BrowserRouter>,\n    document.getElementById('root'));"],"sourceRoot":""}